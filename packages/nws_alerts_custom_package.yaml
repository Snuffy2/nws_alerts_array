#################################################################################
#
#   This is the package for NWS ALERTS USING THE CUSTOM INTEGRATION
#
#################################################################################

## For testing the API

# https://api.weather.gov/alerts/active/count

# https://api.weather.gov/alerts/active?zone=INZ009,INC033

########################  SENSOR  ###############################################

## the NWS Sensor can now be installed using HACS. If you aren't using HACS you can uncomment the nws_alerts sensor here and configure it manually.

# sensor:
  # - platform: nws_alerts
    # zone_id: 'INZ009,INC033'
    # name: nws alerts yaml
    
######################## BINARY SENSOR  #########################################

binary_sensor:
  - platform: template
    sensors:
      nws_alerts_are_active:
        friendly_name: NWS Alerts Are Active
        #entity_id: sensor.nws_alerts
        value_template: >
          {{ states('sensor.nws_alerts') | int(0) > 0 }}
        icon_template: >-
          {% if states('sensor.nws_alerts') | int(0) > 0 %}
            mdi:weather-lightning
          {% else %}
            mdi:weather-sunny
          {% endif %}
 
######################## INPUT BOOLEAN  #########################################
# No longer needed
#input_boolean:
#  nws_multi_alert:
#    name: NWS Multiple Alerts At Once

######################## INPUT DATETIME  #########################################
input_datetime:
  nws_next_expire_trigger:
    name: NWS Next Alert Expiration Time

########################  AUTOMATION  ###########################################

automation:
- alias: 'NWS Alerts: Send Alerts'
  description: ''
  trigger:
    - platform: state
      entity_id: sensor.nws_alerts
  condition:
    - condition: template
      value_template: '{{ states(''sensor.nws_alerts'') | int(0) > 0 }}'
  action:
    - repeat:
        count: '{{ states(''sensor.nws_alerts'')|int(0) }}'
        sequence:
          - choose:
              - conditions:
                  - condition: template
                    value_template: >-
                      {{ (state_attr('sensor.nws_alerts',
                      'id')[(repeat.index-1)] not in
                      state_attr('variable.nws_alerts_id_history', 'ids'))
                      }}
                  - condition: template
                    value_template: >-
                      {{ as_timestamp(state_attr('sensor.nws_alerts',
                      'expires')[(repeat.index-1)],0) > now().timestamp() }}
                sequence:
                  - service: persistent_notification.create
                    data:
                      title: >
                        {{ state_attr('sensor.nws_alerts',
                        'title')[(repeat.index-1)] }}
                      message: >
                        {{ state_attr('sensor.nws_alerts',
                        'headline')[(repeat.index-1)]~"\n" }}  {{
                        state_attr('sensor.nws_alerts','description')[(repeat.index-1)]~"\n\n"
                        }}  Expires: {{
                        as_timestamp(state_attr('sensor.nws_alerts','expires')[(repeat.index-1)])|timestamp_custom("%m/%d
                        %-I:%M %p") }}
                      notification_id: >
                        {{ state_attr('sensor.nws_alerts',
                        'id')[(repeat.index-1)]
                        |replace('urn:oid:2.49.0.1.840.0.','')|replace('.','') }}
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: >-
                              {{ state_attr('sensor.nws_alerts',
                              'title')[(repeat.index-1)]|trim in ['Red Flag
                              Warning','Severe Thunderstorm Warning','Tornado
                              Watch','Severe Thunderstorm Watch','Special Weather
                              Statement','Tropical Cyclone Statement','Snow Squall
                              Warning','Winter Storm Watch'] }}
                        sequence:
                          - service: notify.parents
                            data:
                              message: >
                                {% if state_attr('sensor.nws_alerts',
                                'spoken')[(repeat.index-1)] is not none -%} {{
                                state_attr('sensor.nws_alerts',
                                'spoken')[(repeat.index-1)] }} {% else -%} {{
                                state_attr('sensor.nws_alerts',
                                'headline')[(repeat.index-1)] }} {% endif %}
                                Expires: {{
                                as_timestamp(state_attr('sensor.nws_alerts','expires')[(repeat.index-1)])|timestamp_custom("%m/%d
                                %-I:%M %p") }}
                              title: >
                                {{ state_attr('sensor.nws_alerts',
                                'title')[(repeat.index-1)] }}
                              data:
                                group: weather_alert
                                tag: >
                                  {{ state_attr('sensor.nws_alerts',
                                  'id')[(repeat.index-1)]
                                  |replace('urn:oid:2.49.0.1.840.0.','')|replace('.','')
                                  }}
                                url: >-
                                  https://alerts.weather.gov/cap/wwaatmget.php?x=NJC003
                      - conditions:
                          - condition: or
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ state_attr('sensor.nws_alerts',
                                  'severity')[(repeat.index-1)]|trim == "Extreme"
                                  }}
                              - condition: template
                                value_template: >-
                                  {{ state_attr('sensor.nws_alerts',
                                  'title')[(repeat.index-1)]|trim in ['Tornado
                                  Warning'] }}
                        sequence:
                          - service: notify.parents
                            data:
                              message: >
                                {{ state_attr('sensor.nws_alerts',
                                'spoken')[(repeat.index-1)]~"\n" }} Expires: {{
                                as_timestamp(state_attr('sensor.nws_alerts',
                                'expires')[(repeat.index-1)])|timestamp_custom("%m/%d
                                %-I:%M %p") }}
                              title: >
                                {{ state_attr('sensor.nws_alerts',
                                'title')[(repeat.index-1)] }}
                              data:
                                group: weather_alert
                                tag: >
                                  {{ state_attr('sensor.nws_alerts',
                                  'id')[(repeat.index-1)]
                                  |replace('urn:oid:2.49.0.1.840.0.','')|replace('.','')
                                  }}
                                url: >-
                                  https://alerts.weather.gov/cap/wwaatmget.php?x=NJC003
                                push:
                                  badge: 0
                                  interruption-level: critical
                                  sound:
                                    name: alarm.caf
                                    critical: 1
                                    volume: 1
                    default: []
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: >-
                              {{ state_attr('sensor.nws_alerts',
                              'title')[(repeat.index-1)]|trim in ['Severe
                              Thunderstorm Warning'] }}
                          - condition: time
                            after: '08:00:00'
                            before: '21:00:00'
                        sequence:
                          - service: media_player.volume_set
                            data:
                              entity_id: group.echo_all
                              volume_level: 0.6
                          - service: notify.alexa_media
                            data:
                              target: group.echo_all
                              data:
                                type: tts
                              message: >-
                                Attention!,,,Attention!,,,The National Weather
                                Service Has issued a {{
                                state_attr('sensor.nws_alerts',
                                'title')[(repeat.index-1)]|trim }} for our area
                          - delay: '00:00:15'
                          - service: media_player.volume_set
                            data:
                              entity_id: group.echo_all
                              volume_level: 0.5
                      - conditions:
                          - condition: template
                            value_template: >-
                              {{ state_attr('sensor.nws_alerts',
                              'title')[(repeat.index-1)]|trim in ['Tornado
                              Warning'] }}
                        sequence:
                          - service: media_player.volume_set
                            data:
                              entity_id: group.echo_all
                              volume_level: 1
                          - repeat:
                              count: '2'
                              sequence:
                                - service: notify.alexa_media
                                  data:
                                    target: group.echo_all
                                    data:
                                      type: tts
                                    message: >-
                                      Attention!,,, Attention!,,, The National
                                      Weather Service Has issued a {{
                                      state_attr('sensor.nws_alerts',
                                      'title')[(repeat.index-1)]|trim }} for our
                                      area,,, Seek Shelter Now.
                                - delay: '00:00:15'
                          - service: media_player.volume_set
                            data:
                              entity_id:
                                - group.echo_all
                              volume_level: 0.5
                    default: []
                  - service: variable.set_variable
                    data:
                      variable: nws_alerts_id_history
                      attributes:
                        ids: >-
                          {%- if
                          (state_attr('variable.nws_alerts_id_history',
                          'ids')|count >= 20) -%}
                            {{ state_attr('variable.nws_alerts_id_history', 'ids')[(state_attr('variable.nws_alerts_id_history', 'ids')|count-20+1):] + [(state_attr('sensor.nws_alerts', 'id')[(repeat.index-1)])] }}
                          {%- else -%}
                            {{ state_attr('variable.nws_alerts_id_history', 'ids') + [(state_attr('sensor.nws_alerts', 'id')[(repeat.index-1)])] }}
                          {%- endif %}
                        expires: >-
                          {%- if
                          (state_attr('variable.nws_alerts_id_history',
                          'expires')|count >= 20) -%}
                            {{ state_attr('variable.nws_alerts_id_history', 'expires')[(state_attr('variable.nws_alerts_id_history', 'expires')|count-20+1):] + [(state_attr('sensor.nws_alerts', 'expires')[(repeat.index-1)])] }}
                          {%- else -%}
                            {{ state_attr('variable.nws_alerts_id_history', 'expires') + [(state_attr('sensor.nws_alerts', 'expires')[(repeat.index-1)])] }}
                          {%- endif %}
                  - service: input_datetime.set_datetime
                    data:
                      timestamp: >-
                        {% set data = namespace(expires=[]) %} {% for expire in
                        state_attr('variable.nws_alerts_id_history','expires')
                        -%}
                          {% if as_timestamp(expire,0) > now()|as_timestamp() %}
                            {% set data.expires = data.expires + [expire] -%}
                          {% endif %}
                        {% endfor %} {%- if data.expires|count > 0 -%}
                          {{ as_timestamp(data.expires|min,0)+5 }}
                        {% else -%}
                          0
                        {% endif %}
                    target:
                      entity_id: input_datetime.nws_next_expire_trigger
            default: []
  mode: single

- alias: 'NWS Alerts: Clear Expired Alerts'
  description: ''
  trigger:
    - platform: state
      entity_id: variable.nws_alerts_id_history
      attribute: ids
    - platform: time
      at: input_datetime.nws_next_expire_trigger
  condition:
    - condition: template
      value_template: '{{ state_attr(''variable.nws_alerts_id_history'',''ids'')|count >0 }}'
  action:
    - repeat:
        count: >-
          {{ state_attr('variable.nws_alerts_id_history','ids')|count|int(0)
          }}
        sequence:
          - choose:
              - conditions:
                  - condition: template
                    value_template: >-
                      {{
                      as_timestamp(state_attr('variable.nws_alerts_id_history','expires')[(repeat.index-1)],0)
                      < now().timestamp() }}
                sequence:
                  - service: persistent_notification.dismiss
                    data:
                      notification_id: >
                        {{
                        state_attr('variable.nws_alerts_id_history','ids')[(repeat.index-1)]
                        |replace('urn:oid:2.49.0.1.840.0.','')|replace('.','') }}
                  - service: notify.parents
                    data:
                      message: clear_notification
                      data:
                        tag: >
                          {{
                          state_attr('variable.nws_alerts_id_history','ids')[(repeat.index-1)]
                          |replace('urn:oid:2.49.0.1.840.0.','')|replace('.','')
                          }}
            default: []
    - service: input_datetime.set_datetime
      data:
        timestamp: >-
          {% set data = namespace(expires=[]) %} {% for expire in
          state_attr('variable.nws_alerts_id_history','expires') -%}
            {% if as_timestamp(expire,0) > now()|as_timestamp() %}
              {% set data.expires = data.expires + [expire] -%}
            {% endif %}
          {% endfor %} {%- if data.expires|count > 0 -%}
            {{ as_timestamp(data.expires|min,0)+5 }}
          {% else -%}
            0
          {% endif %}
      target:
        entity_id: input_datetime.nws_next_expire_trigger
  mode: queued
          
############################  SCRIPT  ###################################
# No longer needed
#script:
#  nws_popup_on_wx_alert:
#    alias: NWS Weather Alert Pop Up
#    sequence:
#      - service: >
#          {% if states('sensor.nws_alerts') != '0' %}
#            persistent_notification.create
#          {% endif %}
#        data_template:
#          notification_id: "nwswxalert"
#          message: "{{ message }}"
#          title: '{{ title }}'
        
############################## VARIABLE  #####################################

## this uses the hass_variable custom component.
## you can install thru HACS or manually from https://github.com/Wibias/hass-variables

variable:
  nws_alerts_id_history:
    value: 'OK'
    restore: true
